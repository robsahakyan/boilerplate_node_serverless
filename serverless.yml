service: steam-app


provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-north-1
  timeout: 30
package:
  exclude:
    - 'src/**'

resources: 
  Resources: 
    steamGamesTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: steamGames 
        AttributeDefinitions: 
          - AttributeName: appId 
            AttributeType: N 
        KeySchema:
          - AttributeName: appId
            KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 5 
          WriteCapacityUnits: 5
    purchasesTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: purchases 
        AttributeDefinitions: 
          - AttributeName: appId 
            AttributeType: N 
        KeySchema:
          - AttributeName: appId
            KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 5 
          WriteCapacityUnits: 5
functions:
  getGamesList:
    handler: dist/src/controllers/mainController.getGamesList
    events:
      - http:
          path: /games
          method: get  
  getSingleGame:
    handler: dist/src/controllers/mainController.getSingleGame
    events:
      - http:
          path: /games/{id}
          method: get  
  createPurchaseSession: 
    handler: dist/src/controllers/mainController.createPurchaseSession
    events:
      - http:
          path: /games/{id}/purchase-session
          method: post
  approvePurchase: 
    handler: dist/src/controllers/mainController.approvePurchase
    events:
      - http:
          path: /games/{id}/purchase/{sessionId}/approve
          method: post
  verifyUserAsAFriend: 
    handler: dist/src/controllers/mainController.verifyUserAsAFriend
    events:
      - http:
          path: /friends/{steamId}/verify
          method: post
  searchItems: 
    handler: dist/src/controllers/mainController.searchItems
    events:
      - http:
          path: /games/search
          method: get
  retrieveGamesFromSteamAndSendToS3:
    handler: dist/src/controllers/mainController.retrieveGamesFromSteamAndSendToS3
    events:
      - eventBridge:
          schedule: cron(0 0 * * ? *)
  lambdaCallPartForEachGamesList-1:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-2:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-3:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-4:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-5:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-6:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-7:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-8:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-9:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

  lambdaCallPartForEachGamesList-10:
    handler: dist/src/controllers/mainController.lambdaCallPartForEachGamesList
    events:
      - eventBridge:
          schedule: cron(30/5 0-23/1 * * ? *)

plugins:
  - serverless-offline
